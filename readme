https://cnodejs.org/topic/54745ac22804a0997d38b32d

使用Node.js创建自签名的HTTPS服务器
1. 创建自己的CA机构
2. 创建服务器端证书
3. 创建客户端证书
4. 将证书打包

创建自己的CA机构
step1：为CA生成私钥
openssl genrsa -out ca-key.pem -des 1024
step2: 通过CA私钥生成CSR
openssl req -new -key ca-key.pem -out ca-csr.pem
step3: 通过CSR文件和私钥生成CA证书
openssl x509 -req -in ca-csr.pem -signkey ca-key.pem -out ca-cert.pem

创建服务器端证书
step1: 为服务器生成私钥
openssl genrsa -out server-key.pem 1024
step2: 利用服务器私钥文件服务器生成CSR
openssl req -new -key server-key.pem -config openssl.cnf -out server-csr.pem 
这步非常关键，需要指定一份openssl.cnf文件，参考如下
[req]  
    distinguished_name = req_distinguished_name  
    req_extensions = v3_req  
  
    [req_distinguished_name]  
    countryName = Country Name (2 letter code)  
    countryName_default = CN  
    stateOrProvinceName = State or Province Name (full name)  
    stateOrProvinceName_default = BeiJing  
    localityName = Locality Name (eg, city)  
    localityName_default = YaYunCun  
    organizationalUnitName  = Organizational Unit Name (eg, section)  
    organizationalUnitName_default  = Domain Control Validated  
    commonName = Internet Widgits Ltd  
    commonName_max  = 64  
  
    [ v3_req ]  
    # Extensions to add to a certificate request  
    basicConstraints = CA:FALSE  
    keyUsage = nonRepudiation, digitalSignature, keyEncipherment  
    subjectAltName = @alt_names  
  
    [alt_names]  
	#注意这个IP.1的设置，IP地址需要和你的服务器的监听地址一样
    IP.1 = 127.0.0.1
-------end--不包含这行
step3: 通过服务器私钥文件和CSR文件生成服务器证书
openssl x509 -req -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -in server-csr.pem -out server-cert.pem -extensions v3_req -extfile openssl.cnf


创建客户端证书
step1: 生成客户端私钥
openssl genrsa -out client-key.pem 
step2: 利用私钥生成CSR
openssl req -new -key client-key.pem -out client.csr.pem
step3: 生成客户端证书
openssl x509 -req -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -in client-csr.pem -out client-cert.pem 

run test folder to test 

将证书打包
打包服务器端证书
openssl pkcs12 -export -in server-cert.pem -inkey server-key.pem -certfile ca-cert.pem -out server.pfx
打包客户端证书
openssl pkcs12 -export -in client-cert.pem -inkey client-key.pem -certfile ca-cert.pem -out client.pfx

run pack folder to test